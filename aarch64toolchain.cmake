#File raspberrytoolchain.cmake for ROS and system packages to cross compile.
SET(CMAKE_SYSTEM_NAME Linux)

SET(CMAKE_C_COMPILER aarch64-linux-gnu-gcc-8)
#SET(CMAKE_CXX_COMPILER aarch64-linux-gnu-gcc)
SET(CMAKE_CXX_COMPILER aarch64-linux-gnu-g++-8)

# Below call is necessary to avoid non-RT problem.
SET(CMAKE_LIBRARY_ARCHITECTURE aarch64-linux-gnu)

SET(AARCH64_ROOT_PATH ${CMAKE_CURRENT_LIST_DIR}/aarch64_root)
SET(AARCH64_MELODIC_PATH ${AARCH64_ROOT_PATH}/opt/ros/melodic)

SET(CMAKE_FIND_ROOT_PATH ${AARCH64_ROOT_PATH} ${CATKIN_DEVEL_PREFIX} )

#If you have installed cross compiler to somewhere else, please specify that path.
SET(COMPILER_ROOT /usr/aarch64-linux-gnu) 

#Have to set this one to BOTH, to allow CMake to find rospack
#This set of variables controls whether the CMAKE_FIND_ROOT_PATH and CMAKE_SYSROOT are used for find_xxx() operations.
SET(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM BOTH)
SET(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY BOTH)
SET(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE BOTH)
SET(CMAKE_FIND_ROOT_PATH_MODE_PACKAGE BOTH)

SET(CMAKE_PREFIX_PATH ${AARCH64_MELODIC_PATH} ${AARCH64_ROOT_PATH}/usr ${CMAKE_CURRENT_LIST_DIR}/devel_aarch64)

SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} --sysroot=${AARCH64_ROOT_PATH}" CACHE INTERNAL "" FORCE)
SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} --sysroot=${AARCH64_ROOT_PATH}" CACHE INTERNAL "" FORCE)
SET(CMAKE_C_LINK_FLAGS "${CMAKE_C_LINK_FLAGS} --sysroot=${AARCH64_ROOT_PATH}" CACHE INTERNAL "" FORCE)
SET(CMAKE_CXX_LINK_FLAGS "${CMAKE_CXX_LINK_FLAGS} --sysroot=${AARCH64_ROOT_PATH}" CACHE INTERNAL "" FORCE)

SET(LD_LIBRARY_PATH ${AARCH64_MELODIC_PATH}/lib)